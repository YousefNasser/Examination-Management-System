/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import Entities.*;

import javax.swing.*;
import java.awt.*;

/**
 * AssignInstructorToCourse is a GUI class that allow the admin to assign instructor(s) to class(es).
 * assigning process is done by taking some data (instructor username and class id).
 * once the admin enter the data in the text fields (that check the entered data by a validating functions) and click add button,
 * assignInstructor function is called from Entities.Class and finally instructor is assigned to class.
 *
 * @author Abdelaziz Mostafa
 */
public class AssignInstructorToClass extends javax.swing.JFrame {
    Admin admin;
    private final java.awt.Font myFont = new java.awt.Font("Tahoma", Font.BOLD, 13);
    /**
     * Creates new form AssignInstructorToClass
     */
    public AssignInstructorToClass(Admin admin) {
        this.admin = admin;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel jPanel1 = new JPanel();
        JButton logoutButton = new JButton();
        JLabel title = new JLabel();
        // Variables declaration - do not modify//GEN-BEGIN:variables
        JButton backButton = new JButton();
        usernameTextField = new javax.swing.JTextField();
        classIdTextField = new javax.swing.JTextField();
        JLabel jLabel1 = new JLabel();
        JLabel jLabel2 = new JLabel();
        JButton addButton = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(134, 171, 161));

        logoutButton.setFont(myFont); // NOI18N
        logoutButton.setText("Logout");
        logoutButton.addActionListener(evt -> LogoutButtonActionPerformed());

        title.setFont(new java.awt.Font("Tahoma", Font.BOLD, 24)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        title.setText("Assign Instructor");
        title.setFocusTraversalPolicyProvider(true);

        backButton.setFont(myFont); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(evt -> BackButtonActionPerformed());

        jLabel1.setText("Instructor Username");

        jLabel2.setText("Class  ID");

        addButton.setText("Add");
        addButton.addActionListener(evt -> addButtonActionPerformed());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(addButton)
                                                .addGap(171, 171, 171))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(backButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(title)
                                                .addGap(87, 87, 87)))
                                .addComponent(logoutButton)
                                .addContainerGap())
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(classIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(66, 66, 66))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(124, 124, 124))))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(title)
                                        .addComponent(logoutButton)
                                        .addComponent(backButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(classIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addComponent(addButton)
                                .addGap(129, 129, 129))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // BackButton is used to return to the previous pages (Admin Dashboard , etc..).
    private void BackButtonActionPerformed() {//GEN-FIRST:event_BackButtonActionPerformed
        new AdminDashboard(admin.getUsername()).setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    // Used to logout from the current admin user to UserDashboard.
    private void LogoutButtonActionPerformed() {//GEN-FIRST:event_LogoutButtonActionPerformed
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void addButtonActionPerformed() {//GEN-FIRST:event_addButtonActionPerformed
        if ( isAllWhiteSpaces(classIdTextField.getText()) || isAllWhiteSpaces(usernameTextField.getText()))
        {
            //This message appear if the user try to press add button without filling all data
            JOptionPane.showMessageDialog(null, "You should fill out all text fields", "Error", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        if (!User.doesUsernameExist(usernameTextField.getText()) ||
                User.getUserType(usernameTextField.getText()) != User.UserType.INSTRUCTOR)
        {
            // This message appear if the user try to enter an existing username.
            JOptionPane.showMessageDialog(null, "This is an invalid username", "Error", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        if (!Entities.Class.doesClassIdExist(Integer.parseInt(classIdTextField.getText())))
        {
            // This message appear if the user try to enter an existing class id.
            JOptionPane.showMessageDialog(null, "This is an invalid class ID", "Error", JOptionPane.ERROR_MESSAGE);
            return ;
        }

        // Assigning the instructor to the aimed class by using assignInstructor function from class (Class) from package (Entity).
        Entities.Class.assignInstructor(usernameTextField.getText(),Integer.parseInt(classIdTextField.getText()));

        // // This message appear when assigning process is successfully performed.
        JOptionPane.showMessageDialog(null, "Assigned instructor successfully", "", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * Checking if the data is empty or not.
     * if the whole string is whitespaces it returns true
     * else it returns false
     *
     * @param data string variable that carry the data (password, email, etc..) to check if it is empty or not.
     * @return boolean.
     */
    private boolean isAllWhiteSpaces(String data){
        int whiteSpaceFreq = 0;
        for(char c : data.toCharArray())
        {
            if (c == ' ')
                whiteSpaceFreq++;
        }
        return whiteSpaceFreq == data.length();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | UnsupportedLookAndFeelException | IllegalAccessException | InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignInstructorToClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new AssignInstructorToClass(new Admin("admin")).setVisible(true));
    }

    private javax.swing.JTextField classIdTextField;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
