/*userData table */
CREATE TABLE userData (
UserName varchar2(20) primary key,
First_Name varchar2(20),
Middle_Name varchar2(20),
Last_Name varchar2(20),
BirthDate DATE,
Mobile_Number varchar2(15),
Email varchar2(30) UNIQUE,
Password varchar2(40));

/*class table*/
CREATE TABLE class
(
id number(5) primary key,
courseCode varchar2(20)
);

/*topic table*/
CREATE TABLE topic(
classId number(5),
name varchar2(20));

/*studentRegister table*/
create table studentRegister(
classId number(5)/*FK refers to class table*/,
username varchar2(30)/*FK refers to student table*/
/*both are composite PK*/
);

/*course table*/
create table course(
courseCode varchar(20) primary key,
courseName varchar2(50) UNIQUE);

/*admin table*/
create table adminstrator(
username varchar2(25)
);

/*instructor table*/
create table instructor(
username varchar2(25)
);

/*student table*/
create table student(
username varchar2(25),
Id NUMBER(6)
);

/*exam table*/
create table exam(
examId number(5) primary key,
examDate Date,
startTime DATE,
endTime DATE,
classId number(5)/*Fk refers to class table*/
);

/*question table*/
create table question(
questionId number(5) primary key,
/*statment varchar2(5000),*/
expectedDifficulty number(3),
topicName varchar2(20),/*FK refers to topic table*/
examId number(5),/*FK refers to examModel (points to both examid and model number)*/
modelNumber number(3)/*FK refers to examModel table*/
);

/*instructorOf table*/
create table instructorOf(
classId number(5),/*FK refers to class table*/
username varchar2(25)/*FK refers to instructor table*/
);

/*questionChoice table*/
create table questionchoice(
questionId number(5)/*FK refers to question table*/,
choiceNumber varchar2(2)
/*both form a composite PK*/
/*choiceStatment varchar2(400)*/);

/*solve table*/
create table solve (
questionId number(5)/*FK refer to question table*/,
username varchar2(25)/*FK refers to student table*/,
/*both are composite PK*/
studentChoice varchar2(2));

/*examModel table*/
create table examModel(
examId number(5)/*FK refer to exam table*/,
modelNumber number(3)
/*both are form composite PK*/);

/*assignedModel table*/
create table assignedModel(
modelNumber number(3)/*FK refers to model table*/,
examId number(5)/*FK refers to exam table*/,
username varchar2(30)/*FK refers to student table*/
/*all together are fk*/);

/*alter to join class tbale with course table*/
ALTER table class
ADD FOREIGN KEY (courseCode) REFERENCES course(courseCode);

/*alter to make composite PK*/ 
ALTER TABLE topic
add foreign key (classId) REFERENCES class(id)
add constraint topicCompositePK primary key(classId , name);

/*alter to join studentRegister with class,student(table)*/
ALTER TABLE studentRegister
add foreign key (classId) REFERENCES class(id)
add foreign key (username) REFERENCES student(username)
add constraint studentRegisterPK primary key(classId,username);

/*alter to join admin table with userData table*/
alter table adminstrator
add foreign key (username) REFERENCES userData (username)
add primary key (username);

/*alter to join instructor table with userData table*/
alter table instructor 
add foreign key (username) REFERENCES userData (username)
add primary key (username);

/*alter to join student table with userData table*/
alter table student 
add foreign key (username) REFERENCES userData (username)
add primary key (username);

/*alter to join exam with class table*/
alter table exam
add foreign key (classId) REFERENCES class(id);

/*alter to join question table with topic and model table*/
alter table question 
add foreign key (topicName) REFERENCES topic(name)
add foreign key (examId) REFERENCES topic(examId)
add foreign key (topicName) REFERENCES examModelodel(modelNumber);

/*alter to join instructorOf table with class and instructor table*/
alter table instructorOf
add foreign key (classId) REFERENCES class(id)
add foreign key (username) REFERENCES instructor(username)
add constraint instructorOfPK primary key(classId,username);


/*alter to join questionChoice table with question table*/
alter table questionChoice
add foreign key (questionId) REFERENCES question(questionId)
add constraint questionChoicePK primary key(questionId,choiceNumber);

/*alter to join solve table withstudent and question table*/
alter table solve
add foreign key (questionId) REFERENCES question(questionId)
add foreign key (username) REFERENCES student(username)
add constraint solvePK primary key(questionId,username);

/*alter to join examModel table with exam table*/
alter table examModel
add foreign key (examId) REFERENCES exam(examId)
add constraint examModelPK primary key(examId,modelNumber);

/*alter to join assignedModel table with student , exam and question tables*/
alter table assignedModel
add foreign key (modelNumber) REFERENCES examModel(modelNumber)
add foreign key (examId) REFERENCES exam(examId)
add foreign key (username) REFERENCES student(username)
add constraint assignedModelPK primary key(modelNumber,examId,username);

/*add name into exam table*/
alter table exam
add (name varchar2(20));

/*add choiceStatement into questionChoice table*/
alter table questionchoice
add (choiceStatement  varchar2(1000));

/*add statement into question table*/
alter table question
add (statement  varchar2(1000));

/*add isPublished into exam */
alter table exam
add (ispublished char(1));

/*dropping examdata from exam since start/end time contains the examdata */
alter table "HR"."EXAM" drop column "EXAMDATE" cascade constraints;






