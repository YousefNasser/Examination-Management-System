/*DROPPING all the pre-existing TABLEs preparing for the DB update*/
DROP TABLE adminstrator cascade CONSTRAINTs;
DROP TABLE assignedmodel cascade CONSTRAINTs;
DROP TABLE class cascade CONSTRAINTs;
DROP TABLE course cascade CONSTRAINTs;
DROP TABLE exam cascade CONSTRAINTs;
DROP TABLE exammodel cascade CONSTRAINTs;
DROP TABLE instructor cascade CONSTRAINTs;
DROP TABLE instructorof cascade CONSTRAINTs;
DROP TABLE question cascade CONSTRAINTs;
DROP TABLE questionChoice cascade CONSTRAINTs;
DROP TABLE correctChoice cascade CONSTRAINTs;
DROP TABLE solve cascade CONSTRAINTs;
DROP TABLE student cascade CONSTRAINTs;
DROP TABLE studentregister cascade CONSTRAINTs;
DROP TABLE topic cascade CONSTRAINTs;
DROP TABLE userdata cascade CONSTRAINTs;

/*userData TABLE */
CREATE TABLE userData (
UserName VARCHAR2(50) PRIMARY KEY,
firstName VARCHAR2(50),
middleName VARCHAR2(50),
lastName VARCHAR2(50),
birthdate DATE,
mobileNumber VARCHAR2(50),
email VARCHAR2(50) UNIQUE,
Password VARCHAR2(50));

/*class TABLE*/
CREATE TABLE class
(
id NUMBER(5) PRIMARY KEY,
courseCode VARCHAR2(50)
);

/*topic TABLE*/
CREATE TABLE topic(
classId NUMBER(5),
name VARCHAR2(50));

/*student TABLE*/
CREATE TABLE student(
username VARCHAR2(50),
Id NUMBER(6)
);

/*studentRegister TABLE*/
CREATE TABLE studentRegister(
classId NUMBER(5)/*FK refers to class TABLE*/,
username VARCHAR2(50)/*FK refers to student TABLE*/
/*both are composite PK*/
);

/*course TABLE*/
CREATE TABLE course(
courseCode VARCHAR(50) PRIMARY KEY,
courseName VARCHAR2(50) UNIQUE);

/*admin TABLE*/
CREATE TABLE adminstrator(
username VARCHAR2(50)
);

/*instructor TABLE*/
CREATE TABLE instructor(
username VARCHAR2(50)
);

/*exam TABLE*/
CREATE TABLE exam(
examId NUMBER(5) PRIMARY KEY,
startTime DATE,
endTime DATE,
classId NUMBER(5)/*Fk refers to class TABLE*/
);

/*question TABLE*/
CREATE TABLE question(
questionId NUMBER(5) PRIMARY KEY,
/*statment VARCHAR2(5000),*/
expectedDifficulty NUMBER(3),
topicName VARCHAR2(50),/*FK refers to topic TABLE*/
examId NUMBER(5),/*FK refers to examModel (points to both examid and model number)*/
modelNumber NUMBER(3),/*FK refers to examModel TABLE*/
classId NUMBER(5)/*Fk refers to class TABLE*/
);

/*instructorOf TABLE*/
CREATE TABLE instructorOf(
classId NUMBER(5),/*FK refers to class TABLE*/
username VARCHAR2(50)/*FK refers to instructor TABLE*/
);

/*questionChoice TABLE*/
CREATE TABLE questionChoice(
questionId NUMBER(5)/*FK refers to question TABLE*/,
choiceNumber VARCHAR2(2)
/*both form a composite PK*/
/*choiceStatment VARCHAR2(400)*/);

/*correctChoice TABLE*/
CREATE TABLE correctChoice(
questionId NUMBER(5),
correctChoiceNumber VARCHAR2(2));

/*solve TABLE*/
CREATE TABLE solve (
questionId NUMBER(5)/*FK refer to question TABLE*/,
username VARCHAR2(50)/*FK refers to student TABLE*/,
/*both are composite PK*/
studentChoice VARCHAR2(2));

/*examModel TABLE*/
CREATE TABLE examModel(
examId NUMBER(5)/*FK refer to exam TABLE*/,
modelNumber NUMBER(3)
/*both are form composite PK*/);

/*assignedModel TABLE*/
CREATE TABLE assignedModel(
modelNumber NUMBER(3)/*FK refers to model TABLE*/,
examId NUMBER(5)/*FK refers to exam TABLE*/,
username VARCHAR2(50)/*FK refers to student TABLE*/
/*all together are fk*/);

/*ALTER to join class TABLE with course TABLE*/
ALTER TABLE class
ADD FOREIGN KEY (courseCode) REFERENCES course(courseCode);

/*ALTER to make composite PK*/ 
ALTER TABLE topic
ADD FOREIGN KEY (classId) REFERENCES class(id)
ADD CONSTRAINT topicCompositePK PRIMARY KEY(classId , name);

/*ALTER to join admin TABLE with userData TABLE*/
ALTER TABLE adminstrator
ADD FOREIGN KEY (username) REFERENCES userData (username)
ADD PRIMARY KEY (username);

/*ALTER to join instructor TABLE with userData TABLE*/
ALTER TABLE instructor 
ADD FOREIGN KEY (username) REFERENCES userData (username)
ADD PRIMARY KEY (username);

/*ALTER to join student TABLE with userData TABLE*/
ALTER TABLE student 
ADD FOREIGN KEY (username) REFERENCES userData (username)
ADD PRIMARY KEY (username);

/*ALTER to join studentRegister with class,student(TABLE)*/
ALTER TABLE studentRegister
ADD FOREIGN KEY (classId) REFERENCES class(id)
ADD FOREIGN KEY (username) REFERENCES student(username)
ADD CONSTRAINT studentRegisterPK PRIMARY KEY(classId,username);

/*ALTER to join exam with class TABLE*/
ALTER TABLE exam
ADD FOREIGN KEY (classId) REFERENCES class(id);

/*ALTER to join examModel TABLE with exam TABLE*/
ALTER TABLE examModel
ADD FOREIGN KEY (examId) REFERENCES exam(examId)
ADD CONSTRAINT examModelPK PRIMARY KEY(examId,modelNumber);

/*ALTER to join question TABLE with topic and model TABLE*/
ALTER TABLE question
ADD FOREIGN KEY (topicName,classid) REFERENCES topic(name,classid)
ADD FOREIGN KEY (modelNumber,examid) REFERENCES examModel(modelNumber,examid);

/*ALTER to join instructorOf TABLE with class and instructor TABLE*/
ALTER TABLE instructorOf
ADD FOREIGN KEY (classId) REFERENCES class(id)
ADD FOREIGN KEY (username) REFERENCES instructor(username)
ADD CONSTRAINT instructorOfPK PRIMARY KEY(classId,username);

/*ALTER to join questionChoice TABLE with question TABLE*/
ALTER TABLE questionChoice
ADD FOREIGN KEY (questionId) REFERENCES question(questionId)
ADD CONSTRAINT questionChoicePK PRIMARY KEY(questionId,choiceNumber);


/*ALTER to join correctChoice TABLE with question TABLE*/
ALTER TABLE correctChoice 
ADD FOREIGN KEY (questionId) REFERENCES question (questionId)
ADD PRIMARY KEY (questionId);

/*ALTER to join solve TABLE withstudent and question TABLE*/
ALTER TABLE solve
ADD FOREIGN KEY (questionId) REFERENCES question(questionId)
ADD FOREIGN KEY (username) REFERENCES student(username)
ADD CONSTRAINT solvePK PRIMARY KEY(questionId,username);

/*ADD name into exam TABLE*/
ALTER TABLE exam
ADD (name VARCHAR2(50));

/*ADD choiceStatement into questionChoice TABLE*/
ALTER TABLE questionChoice
ADD (choiceStatement  VARCHAR2(1000));

/*ADD statement into question TABLE*/
ALTER TABLE question
ADD (statement  VARCHAR2(1000));

/*ADD isPublished into exam */
ALTER TABLE exam
ADD (ispublished CHAR(1));

/*ALTER to join assignedModel TABLE with student , exam and question TABLEs*/
ALTER TABLE assignedModel
ADD FOREIGN KEY (modelNumber,examid) REFERENCES examModel(modelNumber,examId)
ADD FOREIGN KEY (username) REFERENCES student(username)
ADD CONSTRAINT assignedModelPK PRIMARY KEY(modelNumber,examId,username);

/*
 * TESTED and PASSED By Yusuf Nasser, Ayman Hassan and Youssef Nader at 23:54 3rd FEB 2021
*/
/*
 * Enhancement done by Yusuf Nasser and Youssef Nader at Feb 5th 2021
 * From 15:14 to 16:17
*/
/*
 * PASSED the final round of testing at Feb 9th 2021 01:48 by Yusuf Nasser and Youssef Nasser.
*/